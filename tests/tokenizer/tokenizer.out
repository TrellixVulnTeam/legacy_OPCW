<keyword> 'foreign'
<string> 'C'
<keyword> 'import'
<string> 'stdio.h'
<punctuator> ';'
<keyword> 'foreign'
<string> 'C'
<keyword> 'import'
<string> 'ctype.h'
<punctuator> ';'
<keyword> 'import'
<identifier> 'asciz'
<punctuator> ';'
<keyword> 'import'
<identifier> 'tokens'
<punctuator> ';'
<keyword> 'let'
<identifier> 'STR_SINGLE'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<decimal integer> '1'
<punctuator> ';'
<keyword> 'let'
<identifier> 'STR_DOUBLE'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<decimal integer> '2'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'lchar'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ' '
<punctuator> ')'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'nchar'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ' '
<punctuator> ')'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'nnchar'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ' '
<punctuator> ')'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'current_id'
<punctuator> ':'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'String'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'current_num'
<punctuator> ':'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'String'
<punctuator> ';'
<keyword> 'let'
<keyword> 'mut'
<identifier> 'cur_str'
<punctuator> ':'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'String'
<punctuator> ';'
<keyword> 'def'
<identifier> 'print_error'
<punctuator> '('
<identifier> 'm'
<punctuator> ':'
<identifier> 'str'
<punctuator> ')'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> 'error: %s\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ','
<identifier> 'm'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<keyword> 'let'
<identifier> 'temp'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'lchar'
<punctuator> ';'
<identifier> 'lchar'
<punctuator> '='
<identifier> 'nchar'
<punctuator> ';'
<identifier> 'nchar'
<punctuator> '='
<identifier> 'nnchar'
<punctuator> ';'
<identifier> 'nnchar'
<punctuator> '='
<identifier> 'getchar'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'temp'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'is_whitespace'
<punctuator> '('
<identifier> 'c'
<punctuator> ':'
<identifier> 'int'
<punctuator> ')'
<punctuator> '->'
<identifier> 'bool'
<punctuator> '{'
<identifier> 'c'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ' '
<punctuator> ')'
<keyword> 'or'
<identifier> 'c'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '\n'
<punctuator> ')'
<keyword> 'or'
<identifier> 'c'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '\t'
<punctuator> ')'
<keyword> 'or'
<identifier> 'c'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '\r'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'is_alphabetic'
<punctuator> '('
<identifier> 'c'
<punctuator> ':'
<identifier> 'int'
<punctuator> ')'
<punctuator> '->'
<identifier> 'bool'
<punctuator> '{'
<identifier> 'isalpha'
<punctuator> '('
<identifier> 'c'
<keyword> 'as'
<identifier> 'int32'
<punctuator> ')'
<punctuator> '<>'
<decimal integer> '00'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'is_alphanumeric'
<punctuator> '('
<identifier> 'c'
<punctuator> ':'
<identifier> 'int'
<punctuator> ')'
<punctuator> '->'
<identifier> 'bool'
<punctuator> '{'
<identifier> 'isalnum'
<punctuator> '('
<identifier> 'c'
<keyword> 'as'
<identifier> 'int32'
<punctuator> ')'
<punctuator> '<>'
<decimal integer> '00'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'c'
<punctuator> ':'
<identifier> 'int'
<punctuator> ')'
<punctuator> '->'
<identifier> 'bool'
<punctuator> '{'
<identifier> 'isdigit'
<punctuator> '('
<identifier> 'c'
<keyword> 'as'
<identifier> 'int32'
<punctuator> ')'
<punctuator> '<>'
<decimal integer> '00'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'consume_whitespace'
<punctuator> '('
<punctuator> ')'
<punctuator> '{'
<keyword> 'while'
<identifier> 'is_whitespace'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'def'
<identifier> 'scan_identifier'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'clear'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ')'
<punctuator> ';'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<keyword> 'not'
<identifier> 'is_alphanumeric'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<keyword> 'and'
<keyword> 'not'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '_'
<punctuator> ')'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'def'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_DEF'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'let'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'static'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STATIC'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'mut'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MUT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'true'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_TRUE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'false'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FALSE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'self'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_SELF'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'as'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_AS'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'and'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_AND'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'or'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_OR'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'not'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_NOT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'if'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_IF'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'else'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_ELSE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'for'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FOR'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'while'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_WHILE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'loop'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LOOP'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'match'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MATCH'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'break'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_BREAK'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'continue'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_CONTINUE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'return'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RETURN'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'type'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_TYPE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'enum'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_ENUM'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'module'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MODULE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'import'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_IMPORT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'use'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_USE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'foreign'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FOREIGN'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'eq_str'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ','
<string> 'unsafe'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_UNSAFE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_IDENTIFIER'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'scan_numeric'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<keyword> 'let'
<identifier> 'current_tok'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<decimal integer> '00'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'clear'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '0'
<punctuator> ')'
<punctuator> '{'
<identifier> 'current_tok'
<punctuator> '='
<keyword> 'if'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'b'
<punctuator> ')'
<keyword> 'or'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'B'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_BIN_INTEGER'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'x'
<punctuator> ')'
<keyword> 'or'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'X'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_HEX_INTEGER'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'o'
<punctuator> ')'
<keyword> 'or'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'O'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_OCT_INTEGER'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<punctuator> '{'
<decimal integer> '00'
<punctuator> ';'
<punctuator> '}'
<punctuator> ';'
<keyword> 'if'
<identifier> 'current_tok'
<punctuator> '=='
<decimal integer> '00'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'current_tok'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_BIN_INTEGER'
<punctuator> '{'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'in_range'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ','
<string> '0'
<punctuator> ','
<string> '1'
<punctuator> ')'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '<>'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '_'
<punctuator> ')'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'current_tok'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_HEX_INTEGER'
<punctuator> '{'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'isxdigit'
<punctuator> '('
<identifier> 'lchar'
<keyword> 'as'
<identifier> 'int32'
<punctuator> ')'
<punctuator> '<>'
<decimal integer> '00'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '<>'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '_'
<punctuator> ')'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'current_tok'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_OCT_INTEGER'
<punctuator> '{'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'in_range'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ','
<string> '0'
<punctuator> ','
<string> '7'
<punctuator> ')'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '<>'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '_'
<punctuator> ')'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<identifier> 'current_tok'
<punctuator> '='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_DEC_INTEGER'
<punctuator> ';'
<keyword> 'while'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '.'
<punctuator> ')'
<punctuator> '{'
<keyword> 'if'
<keyword> 'not'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'nchar'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<identifier> 'current_tok'
<punctuator> '='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FLOAT'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<keyword> 'while'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'e'
<punctuator> ')'
<keyword> 'or'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'E'
<punctuator> ')'
<punctuator> '{'
<keyword> 'if'
<keyword> 'not'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'nchar'
<punctuator> ')'
<keyword> 'and'
<keyword> 'not'
<punctuator> '('
<punctuator> '('
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '+'
<punctuator> ')'
<keyword> 'or'
<identifier> 'nchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '-'
<punctuator> ')'
<punctuator> ')'
<keyword> 'and'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'nnchar'
<punctuator> ')'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<identifier> 'current_tok'
<punctuator> '='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FLOAT'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<keyword> 'while'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'return'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'scan_string'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<keyword> 'let'
<identifier> 'current_tok'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STRING'
<punctuator> ';'
<keyword> 'let'
<identifier> 'kind'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '"'
<punctuator> ')'
<punctuator> '{'
<identifier> 'STR_DOUBLE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<punctuator> '{'
<identifier> 'STR_SINGLE'
<punctuator> ';'
<punctuator> '}'
<punctuator> ';'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'clear'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ')'
<punctuator> ';'
<keyword> 'let'
<identifier> 'in_escape'
<punctuator> ':'
<identifier> 'bool'
<punctuator> '='
<keyword> 'false'
<punctuator> ';'
<keyword> 'let'
<identifier> 'in_byte_escape'
<punctuator> ':'
<identifier> 'bool'
<punctuator> '='
<keyword> 'false'
<punctuator> ';'
<keyword> 'loop'
<punctuator> '{'
<keyword> 'if'
<identifier> 'in_escape'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'x'
<punctuator> ')'
<keyword> 'or'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> 'X'
<punctuator> ')'
<punctuator> '{'
<identifier> 'in_byte_escape'
<punctuator> '='
<keyword> 'true'
<punctuator> ';'
<punctuator> '}'
<identifier> 'in_escape'
<punctuator> '='
<keyword> 'false'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'in_byte_escape'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<identifier> 'in_byte_escape'
<punctuator> '='
<keyword> 'false'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<punctuator> '{'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '\\'
<punctuator> ')'
<punctuator> '{'
<identifier> 'in_escape'
<punctuator> '='
<keyword> 'true'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<punctuator> '('
<identifier> 'kind'
<punctuator> '=='
<identifier> 'STR_SINGLE'
<keyword> 'and'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '''
<punctuator> ')'
<punctuator> ')'
<keyword> 'or'
<punctuator> '('
<identifier> 'kind'
<punctuator> '=='
<identifier> 'STR_DOUBLE'
<keyword> 'and'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '"'
<punctuator> ')'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<punctuator> '{'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'push'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ','
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<punctuator> '}'
<identifier> 'current_tok'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'scan_punctuator'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '('
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LPAREN'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ')'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RPAREN'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '['
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LBRACKET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ']'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RBRACKET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '{'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LBRACE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '}'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RBRACE'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ';'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_SEMICOLON'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ','
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COMMA'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '.'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_DOT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '^'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_HAT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '&'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_AMPERSAND'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '+'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PLUS_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PLUS'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '-'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MINUS_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '>'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RARROW'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MINUS'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '*'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STAR_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STAR'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '/'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FSLASH_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FSLASH'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '%'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PERCENT_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PERCENT'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '<'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '>'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET_RCARET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '>'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RCARET_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RCARET'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_EQ_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> ':'
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '='
<punctuator> ')'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COLON_EQ'
<punctuator> ';'
<punctuator> '}'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COLON'
<punctuator> ';'
<punctuator> '}'
<decimal integer> '00'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'get_next_token'
<punctuator> '('
<punctuator> ')'
<punctuator> '->'
<identifier> 'int'
<punctuator> '{'
<identifier> 'consume_whitespace'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'EOF'
<punctuator> '{'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_END'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'is_alphabetic'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<keyword> 'or'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '_'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'scan_identifier'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'is_numeric'
<punctuator> '('
<identifier> 'lchar'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'scan_numeric'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '''
<punctuator> ')'
<keyword> 'or'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '"'
<punctuator> ')'
<punctuator> '{'
<keyword> 'return'
<identifier> 'scan_string'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'let'
<identifier> 'possible_token'
<punctuator> ':'
<identifier> 'int'
<punctuator> '='
<identifier> 'scan_punctuator'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'possible_token'
<punctuator> '<>'
<decimal integer> '00'
<punctuator> '{'
<keyword> 'return'
<identifier> 'possible_token'
<punctuator> ';'
<punctuator> '}'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'ord'
<punctuator> '('
<string> '#'
<punctuator> ')'
<punctuator> '{'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'bump'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<punctuator> '-'
<decimal integer> '1'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'lchar'
<punctuator> '=='
<hexadecimal integer> '0A'
<keyword> 'or'
<identifier> 'lchar'
<punctuator> '=='
<hexadecimal integer> '0D'
<punctuator> '{'
<keyword> 'return'
<identifier> 'get_next_token'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<punctuator> '}'
<identifier> 'printf'
<punctuator> '('
<string> 'error: unknown token: '%c'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ','
<identifier> 'lchar'
<punctuator> ')'
<punctuator> ';'
<identifier> 'lchar'
<punctuator> '='
<identifier> 'getchar'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<keyword> 'return'
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_ERROR'
<punctuator> ';'
<punctuator> '}'
<keyword> 'def'
<identifier> 'println_token'
<punctuator> '('
<identifier> 'token'
<punctuator> ':'
<identifier> 'int'
<punctuator> ')'
<punctuator> '{'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_ERROR'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<error>\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_END'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<end>\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LINE'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<line>\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '<='
<punctuator> '-'
<decimal integer> '1000'
<keyword> 'and'
<identifier> 'token'
<punctuator> '>'
<punctuator> '-'
<decimal integer> '2000'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<keyword> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_IDENTIFIER'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<identifier> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_id'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_DEC_INTEGER'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<decimal integer> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_BIN_INTEGER'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<binary integer> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_OCT_INTEGER'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<octal integer> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_HEX_INTEGER'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<hexadecimal integer> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FLOAT'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<floating-point> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'current_num'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STRING'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<string> ''
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<identifier> 'asciz'
<punctuator> '.'
<identifier> 'print'
<punctuator> '('
<identifier> 'cur_str'
<punctuator> ')'
<punctuator> ';'
<identifier> 'printf'
<punctuator> '('
<string> ''\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RARROW'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '->'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PLUS'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '+'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MINUS'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '-'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STAR'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '*'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FSLASH'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '/'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PERCENT'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '%'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_HAT'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '^'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_AMPERSAND'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '&'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LPAREN'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '('\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RPAREN'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ')'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LBRACKET'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '['\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RBRACKET'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ']'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LBRACE'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '{'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RBRACE'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '}'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_SEMICOLON'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ';'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COLON'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ':'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COMMA'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ','\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_DOT'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '.'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '<'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RCARET'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '>'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '<='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_RCARET_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '>='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_EQ_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '=='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_LCARET_RCARET'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '<>'\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PLUS_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '+='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_MINUS_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '-='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_STAR_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '*='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_FSLASH_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '/='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_PERCENT_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> '%='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<keyword> 'else'
<keyword> 'if'
<identifier> 'token'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_COLON_EQ'
<punctuator> '{'
<identifier> 'printf'
<punctuator> '('
<string> '<punctuator> ':='\n'
<keyword> 'as'
<punctuator> '^'
<identifier> 'int8'
<punctuator> ')'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<keyword> 'def'
<identifier> 'main'
<punctuator> '('
<punctuator> ')'
<punctuator> '{'
<keyword> 'let'
<identifier> 'tok'
<punctuator> ':'
<identifier> 'int'
<punctuator> ';'
<keyword> 'loop'
<punctuator> '{'
<identifier> 'tok'
<punctuator> '='
<identifier> 'get_next_token'
<punctuator> '('
<punctuator> ')'
<punctuator> ';'
<identifier> 'println_token'
<punctuator> '('
<identifier> 'tok'
<punctuator> ')'
<punctuator> ';'
<keyword> 'if'
<identifier> 'tok'
<punctuator> '=='
<identifier> 'tokens'
<punctuator> '.'
<identifier> 'TOK_END'
<punctuator> '{'
<keyword> 'break'
<punctuator> ';'
<punctuator> '}'
<punctuator> '}'
<punctuator> '}'
<end>
